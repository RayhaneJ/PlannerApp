@page "/auth/register"
@layout AuthLayout
@using PlannerApp.Shared.Models

@inject AuthenticationService authService
@inject NavigationManager navigationManager

<div class="row">
    <div class="col-12">
        <h2>Create a new account</h2>
        <EditForm Model="registerRequest" OnValidSubmit="RegisterUser">
            <RadzenCard>
                <AlertMessage Message="@message" MessageType="@messageType" />
                <DataAnnotationsValidator />
                <ValidationSummary />

                <label>First Name</label>
                <Radzen.Blazor.RadzenTextBox @bind-Value="registerRequest.FirstName"></Radzen.Blazor.RadzenTextBox>

                <label>Last Name</label>
                <Radzen.Blazor.RadzenTextBox @bind-Value="registerRequest.LastName"></Radzen.Blazor.RadzenTextBox>

                <label>Email Name</label>
                <Radzen.Blazor.RadzenTextBox @bind-Value="registerRequest.Email"></Radzen.Blazor.RadzenTextBox>

                <label>Password</label>
                <Radzen.Blazor.RadzenPassword @bind-Value="registerRequest.Password"></Radzen.Blazor.RadzenPassword>

                <label>Confirm Password</label>
                <Radzen.Blazor.RadzenPassword @bind-Value="registerRequest.ConfirmPassword"></Radzen.Blazor.RadzenPassword>
                <hr />
                <Radzen.Blazor.RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Register"
                                            ButtonStyle="Radzen.ButtonStyle.Primary" class="btn-block mr-2" Disabled="isBusy" />
                <Radzen.Blazor.RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Login"
                                            ButtonStyle="Radzen.ButtonStyle.Secondary" class="btn-block mr-2" Disabled="isBusy" Click="GoToLogin"/>
            </RadzenCard>
        </EditForm>
    </div>
</div>

@code {
    RegisterRequest registerRequest = new RegisterRequest();
    AlertMessageType messageType = AlertMessageType.Success;
    string message = string.Empty;
    bool isBusy;

    public async Task RegisterUser()
    {
        isBusy = true;

        var response = await authService.RegisterUserAsync(registerRequest);
        if (response.IsSuccess)
        {
            message = response.Message;
            messageType = AlertMessageType.Success;
        }
        else
        {
            message = response.Errors.FirstOrDefault() ?? response.Message;
            messageType = Models.AlertMessageType.Error;
        }
        isBusy = false;
    }

    public void GoToLogin()
    {
        navigationManager.NavigateTo("/auth/login");
    }
}

